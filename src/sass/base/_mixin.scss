@mixin flex-box($justify: flex-start, $align: flex-start, $wrap: wrap) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  wrap: $wrap;
}

@mixin borderMe {
  border: 1px solid #e5e5e5;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.2);
}

@mixin border() {
  filter: drop-shadow(0px 1px 2.5px rgba(0, 0, 0, 0.05));
  background-color: #ffffff;
  border: 1px solid rgba(235, 235, 235, 0.5);
}

@mixin transition() {
  transition: all 0.4s ease-in-out;
  -webkit-transition: 0.5;
  -moz-transition: 0.5;
  -ms-transition: 0.5;
  -o-transition: 0.5;
}

@mixin transform($left: 50%, $x: -50%, $top: 50%, $y: -50%) {
  left: $left;
  transform: translateX($x);
  top: $top;
  transform: translateY($y);
}

@mixin square-box($width) {
  width: $width;
  height: $width;
}

@mixin for-size($breakpoint, $direction: down) {
  //neu breakpoint ton tai
  @if map-has-key($breakpoints, $breakpoint) {
    //Kiểm tra breakpoint truyền vào có tồn tại như bạn đã định nghĩa hay không.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Xác định min-width hay max-width
    @if $direction == up {
      //Build media query
      @media (min-width: $breakpoint-value) {
        @content;
      }
    } @else if $direction == down {
      //Build media query
      @media (max-width: $breakpoint-value) {
        @content;
      }
    }
  }
}
